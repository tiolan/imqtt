sudo: false

addons:
  sonarcloud:
    organization: "tiolan"
    token:
      secure: $SONAR_TOKEN

script:
  # Prepare the build system
  - mkdir build
  - cmake -B build -DIMQTT_USE_MOSQ:BOOL=ON -DIMQTT_BUILD_SAMPLE:BOOL=OFF -DIMQTT_INSTALL:BOOL=OFF -DIMQTT_BUILD_DOC:BOOL=OFF -DBUILD_SHARED_LIBS=OFF
  - NUMBER_OF_PROCESSORS=$(nproc --all)
  # Wraps the compilation with the Build Wrapper to generate configuration (used
  # later by the SonarQube Scanner) into the "bw-output" folder
  - build-wrapper-linux-x86-64 --out-dir bw-output cmake -j${NUMBER_OF_PROCESSORS} --build build/
  # And finally run the SonarQube analysis - read the "sonar-project.properties"
  # file to see the specific configuration
  - sonar-scanner -Dsonar.cfamily.cache.enabled=true -Dsonar.cfamily.cache.path=${TRAVIS_HOME}/.cfamily -Dsonar.cfamily.threads=${NUMBER_OF_PROCESSORS}

cache:
  directories:
    - $HOME/.sonar/cache
    # This contains the CFamily cache. According to https://docs.travis-ci.com/user/caching/#pull-request-builds-and-caches,
    # for a PR, it will use the cache of the target branch if the branch of the PR does not already have its cache.
    - $HOME/.cfamily
